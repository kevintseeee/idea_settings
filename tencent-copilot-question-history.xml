<application>
  <component name="tencent-copilot-question-history">
    <option name="questions">
      <list>
        <option value="如果changeMs调用频繁（毫秒级），是不是会对内存造成压力？" />
        <option value="Kotlin原生有类似的方法吗" />
        <option value="请教一下kotlin。看notifyUserKeySeekStopped方法。我在_uiState.update之外，声明了var success，在_uiState.update里面修改success，最后return success。我理解之中的Java，是不可以在匿名内部类中修改外部变量的，现在kotlin这种写法，我要如何理解？" />
        <option value="有没有更简单的写法" />
        <option value="我增加了一个onComponentCreated方法，预计onComponentCreated会访问component，这时候用lazy是不是就不合适了" />
        <option value="还有其他写法吗？" />
        <option value="使用Delegates的observable能做吗" />
        <option value="可以是用lazy吗？" />
        <option value="但是，调用onComponentCreated时，component还未赋值吧？" />
        <option value="先简单介绍一下用法" />
        <option value="有一个Flow0，发送一个data class，这个data class包含两个发送Int类型的Flow：Flow1和Flow2，Flow1不可空，Flow2可空。我希望接收Flow1或者Flow2，显示一个Int在到屏幕上。Flow2优先级高于Flow1." />
        <option value="这几行的写法是不是太冗余了" />
        <option value="忽略上下文，单纯看这几行的写法，是不是不太简洁？" />
        <option value="有什么改进建议吗？毕竟进度更新比较频繁，每次更新都会创建一个Pair，是不是太浪费内存了" />
        <option value="kotlin在“计时”方面，有一个markNow方法。先简单介绍一下这里相关的知识。" />
        <option value="你能读懂这段代码吗" />
        <option value="我希望修改方案，启动两个协程，协程A负责监听seekingProgressFlow，协程B负责监听currentProgressFlow，当seekingProgressFlow非空时，阻塞协程B。这个要怎么办到？" />
        <option value="你读得懂这段代码吗" />
        <option value="你认为有什么实现问题、改进建议？" />
        <option value="kotlin中可以将一个成员声明成两种类型吗？比如说是一个Activity，同时实现了Comparable接口" />
        <option value="" />
        <option value="kotlin写方法注释时是如何引用代码的？类似Java的@link" />
      </list>
    </option>
  </component>
</application>