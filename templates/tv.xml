<templateSet group="tv">
  <template name="tvlogd" value="com.ktcp.utils.log.TVCommonLog.d(TAG, &quot;$METHOD_NAME$: $content$&quot;);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvlogi" value="com.ktcp.utils.log.TVCommonLog.i(TAG, &quot;$METHOD_NAME$: $content$&quot;);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvlogw" value="com.ktcp.utils.log.TVCommonLog.w(TAG, &quot;$METHOD_NAME$: $content$&quot;);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvloge" value="com.ktcp.utils.log.TVCommonLog.e(TAG, &quot;$METHOD_NAME$: $content$&quot;, $exception$);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="exception" expression="" defaultValue="e" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvlogm" value="com.ktcp.utils.log.TVCommonLog.d(TAG, $content$);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="content" expression="groovyScript(&quot;def params = _2.collect {it + ' = [\&quot; + ' + it + ' + \&quot;]'}.join(', '); return '\&quot;' + _1 + '() called' + (params.empty  ? '' : ' with: ' + params) + '\&quot;'&quot;, methodName(), methodParameters())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvlogr" value="com.ktcp.utils.log.TVCommonLog.d(TAG, &quot;$METHOD_NAME$() returned: &quot; +  $result$);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="result" expression="variableOfType(methodReturnType())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvlogn" value="com.ktcp.utils.log.TVCommonLog.w(TAG, &quot;$METHOD_NAME$: $content$ is NULL&quot;);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvlogt" value="private final String TAG = &quot;$className$_&quot; + hashCode();" description="A logtag with your current classname and hashcode" toReformat="true" toShortenFQNames="true">
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="notnull" value="if (!com.tencent.qqlivetv.utils.TvVideoUtils.isNotNull($var$, TAG, &quot;$method$&quot;, &quot;$var$&quot;))&#10;{&#10;    return;&#10;}" description="check null" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="method" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="nonull" value="if (!com.tencent.qqlivetv.utils.TvVideoUtils.isNotNull($var$, TAG, &quot;$method$&quot;, &quot;$var$&quot;))&#10;{&#10;    return;&#10;}" description="check null" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="method" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tvlogst" value="private static final String TAG = &quot;$className$&quot;;" description="A static logtag with your current classname" toReformat="true" toShortenFQNames="true">
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="fixme" value="// fixme kevinrhxie: $todo$" description="adds // FIXME" toReformat="true" toShortenFQNames="true">
    <variable name="todo" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getinstance" value="/**&#10; * @see #getInstance()&#10; */&#10;@Nullable&#10;@GuardedBy(&quot;$CLASS_NAME$.class&quot;)&#10;private static volatile $CLASS_NAME$ INSTANCE = null;&#10;&#10;@android.support.annotation.NonNull&#10;public static $CLASS_NAME$ getInstance()&#10;{&#10;    $CLASS_NAME$ instance = INSTANCE;&#10;    if (instance != null)&#10;    {&#10;        return instance;&#10;    }&#10;    synchronized ($CLASS_NAME$.class)&#10;    {&#10;        instance = INSTANCE;&#10;        if (instance != null)&#10;        {&#10;            return instance;&#10;        }&#10;        instance = new $CLASS_NAME$();&#10;        INSTANCE = instance;&#10;        return instance;&#10;    }&#10;}&#10;&#10;public static void destroyInstance() {&#10;    synchronized ($CLASS_NAME$.class)&#10;    {&#10;        INSTANCE = null;&#10;    }&#10;}&#10;&#10;private $CLASS_NAME$() {&#10;    $STATE_MENT$&#10;}" description="Inserts singleton method getInstance" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="CLASS_NAME" expression="className" defaultValue="" alwaysStopAt="false" />
    <variable name="STATE_MENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
</templateSet>